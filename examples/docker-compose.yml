version: "3.8"

services:
  public-api:
    container_name: public-api
    build:
      context: ..
      dockerfile: examples/PublicApi/Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
      - "5001:5001"
    networks:
      - internal
  
  internal-api1:
    container_name: internal-api1
    build:
      context: ..
      dockerfile: examples/InternalApi1/Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5010:5010"
      - "5011:5011"
    networks:
      - internal
  
  internal-api2:
    container_name: internal-api2
    build:
      context: ..
      dockerfile: examples/InternalApi2/Dockerfile
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5020:5020"
      - "5021:5021"
    networks:
      - internal
  
  localstack:
    image: localstack/localstack
    container_name: localstack
    environment:
      - SERVICES=sqs
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=aaa
      - AWS_SECRET_ACCESS_KEY=aaa
      - SQS_ENDPOINT_STRATEGY=off
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "4566:4566"
      - "8080:8080"
    networks:
      - internal
  
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    networks:
      - internal

networks:
  internal:
    driver: bridge